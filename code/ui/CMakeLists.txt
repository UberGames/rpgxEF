cmake_minimum_required(VERSION 3.10)

set(CMAKE_CXX_STANDARD 17)

if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
    set(ARCH "x86_64")
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "amd64")
    set(ARCH "x86_64")
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "AMD64")
    if (CMAKE_CL_64)
        set(ARCH "x86_64")
    else ()
        set(ARCH "x86")
    endif ()
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86")
    set(ARCH "x86")
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i386")
    set(ARCH "x86")
elseif (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
    set(ARCH "x86")
else ()
    message(FATAL_ERROR "Unknown processor:" ${CMAKE_SYSTEM_PROCESSOR})
endif ()


set(UI_LINKER_OPTIONS -lstdc++fs)
if(BUILD_STATIC)
    set(UI_LINKER_OPTIONS -static -static-libgcc -static-libstdc++ ${UI_LINKER_OPTIONS})
endif(BUILD_STATIC)

set(UI_LIB_NAME "ui${ARCH}")

file(GLOB_RECURSE UI_SRC "*.h" "*.c" "*.cpp")

add_library(ui SHARED ${UI_SRC} $<TARGET_OBJECTS:common> $<TARGET_OBJECTS:base_game> $<TARGET_OBJECTS:catch2_symbols>)
target_include_directories(ui PUBLIC ../json/include ..)
target_link_libraries(ui ${UI_LINKER_OPTIONS})
target_compile_options(ui PUBLIC -Wno-narrowing -Wno-write-strings)
target_compile_definitions(ui PUBLIC -DUI_DLL)
set_target_properties(ui PROPERTIES PREFIX "")
set_property(TARGET ui PROPERTY POSITION_INDEPENDENT_CODE ON)
set_property(TARGET ui PROPERTY OUTPUT_NAME ${UI_LIB_NAME})
target_compile_definitions(base_game PUBLIC -DUI_DLL)